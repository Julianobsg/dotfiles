set nocompatible
set number
filetype off
let mapleader = ","

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-fugitive'
Plugin 'preservim/nerdtree'
Plugin 'kristijanhusak/vim-hybrid-material'
Plugin 'junegunn/fzf.vim'
Plugin 'mileszs/ack.vim'

" Navigation
Plugin 'christoomey/vim-tmux-navigator'

" Text editor
Plugin 'tpope/vim-abolish'

" Languages
Plugin 'dense-analysis/ale'

Plugin 'rust-lang/rust.vim'
Plugin 'habamax/vim-godot'
Plugin 'vim-scripts/Align'
Plugin 'vim-scripts/SQLUtilities'
Plugin 'eslint/eslint'

Plugin 'wakatime/vim-wakatime'

Plugin 'pangloss/vim-javascript'
Plugin 'leafgarland/typescript-vim'
Plugin 'maxmellon/vim-jsx-pretty'
Plugin 'burnettk/vim-angular'

Plugin 'nvie/vim-flake8'

" Autocomplete
Plugin 'neoclide/coc.nvim'
call vundle#end()

filetype plugin indent on
" Nerd Tree config
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30
function! OpenNerdTree()
	if &modifiable && strlen(expand('%')) > 0 && !&diff
		NERDTreeFind
	else
		NERDTreeToggle
	endif
endfunction
nnoremap <silent> <C-\> :call OpenNerdTree()<CR>

" Colors scheme
let g:enable_bold_font = 1
set background=dark
colorscheme hybrid_material
if (has("nvim"))
  "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

"For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
"Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
" < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
  set termguicolors
endif
hi normal guibg=000000

" Tmux navigator, avoid mapping nerdtree toggle shortcut
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
nnoremap <silent> <C-/> :TmuxNavigatePrevious<cr>

" Search
set ignorecase 
set smartcase " Only check case if we type a capital

nnoremap <silent> ,t :FZF<cr>

" ----- Programming languages

let g:vimspector_enable_mappings = 'HUMAN'

" Indentation
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Folds
set foldmethod=indent
set foldnestmax=3
set nofoldenable

" CoC - autocomplete
set hidden
set nobackup
set nowritebackup
set updatetime=300

runtime coc.vim

" Python

autocmd FileType python set softtabstop=4 shiftwidth=4 tabstop=4

" Godot
func! GodotSettings() abort
  set softtabstop=0 shiftwidth=4 tabstop=4
	nnoremap <buffer> <F4> :GodotRunLast<CR>
	nnoremap <buffer> <F5> :GodotRun<CR>
	nnoremap <buffer> <F6> :GodotRunCurrent<CR>
	nnoremap <buffer> <F7> :GodotRunFZF<CR>
endfunc
augroup godot | au!
	au FileType gdscript call GodotSettings()
augroup end

call ale#linter#Define('gdscript', {
      \   'name': 'godot',
      \   'lsp': 'socket',
      \   'address': '127.0.0.1:6008',
      \   'project_root': 'project.godot',
      \})
